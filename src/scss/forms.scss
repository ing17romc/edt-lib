@use './variables';
@use './functions';

$border: 1;
$min-height-span: 20;
$font-size: variables.$fs-16;
$height-control: 40;
$letter-spacing: -0.25;
$margin-bottom: 4;
$padding: 5;
$border-radio: 5;



.control-container {
	display: block;

	span {
		min-height: calculatesizevw($min-height-span);
		display: block;
		color: variables.$black-color;
		font-size: calculateSizeVW(variables.$font-size-control);
	}

	& select,
	& input {
		border-radius: calculatesizevw($border-radio);
		border: calculateSizeVW($border) solid variables.$black-color;

		// border: none;
		text-align: left;
		opacity: 1;
		width: 100%;
		height: calculatesizevw($height-control);
		padding: 0 calculatesizevw($padding) calculatesizevw($padding);
		margin-bottom: calculatesizevw($margin-bottom);
		letter-spacing: calculatesizevw($letter-spacing);
		font-size: calculatesizevw($font-size);
		background-color: variables.$white-color;

		&:focus {
			outline: none;
		}

		&::placeholder {
			font-size: calculatesizevw($font-size);
			color: variables.$gray-color;
			opacity: 1;
		}

		&>option {
			font-size: calculatesizevw($font-size);
			color: variables.$black-color;
			background-color: variables.$white-color;
			opacity: 1;
		}
	}

	& textarea {
		display: block;
		resize: none;
		background-color: variables.$white-color;
		border-radius: calculatesizevw($border-radio);
		border: calculateSizeVW($border) solid variables.$black-color;
		overflow-y: auto;
		width: 100%;
		padding: calculatesizevw($padding);
		margin-bottom: calculatesizevw($margin-bottom);
		letter-spacing: calculatesizevw($letter-spacing);
		font-size: calculatesizevw($font-size);

		&:focus {
			outline: none;
		}

		&::placeholder {
			font-size: calculatesizevw($font-size);
			color: variables.$gray-color;
			opacity: 1;
		}
	}

	& .disabled {
		opacity: variables.$disabled-opacity;
	}

	& .required {
		& span {
			color: variables.$red-color;
		}

		& select,
		& input {
			border: calculateSizeVW($border) solid variables.$red-color;

			&::placeholder {
				opacity: variables.$disabled-opacity;
				color: variables.$red-color;
			}
		}

		& textarea {
			border: calculateSizeVW($border) solid variables.$red-color;
			color: variables.$red-color;

			&::placeholder {
				opacity: variables.$disabled-opacity;
				color: variables.$red-color;
			}
		}
	}

	& .readOnly {
		& span {
			color: variables.$black-color;
		}

		& select {
			color: variables.$black-color;

			&::placeholder {
				color: variables.$black-color;
			}

			&>option {
				color: variables.$black-color;
			}
		}
	}
}

input[type='number']::-webkit-inner-spin-button,
input[type='number']::-webkit-outer-spin-button {
	appearance: none;
	margin: 0;
}

input[type='search']::-webkit-search-decoration,
input[type='search']::-webkit-search-cancel-button,
input[type='search']::-webkit-search-results-button,
input[type='search']::-webkit-search-results-decoration {
	appearance: none;
}

@media screen and (min-width: calculateSizePX(functions.$min-with-screen)) {
	.control-container {
		span {
			min-height: calculatesizepx($min-height-span);
			font-size: calculateSizePX(variables.$font-size-control);
		}

		& select,
		& input {
			border-radius: calculatesizepx($border-radio);
			border: calculateSizePX($border) solid variables.$black-color;
			height: calculatesizepx($height-control);
			padding: 0 calculatesizepx($padding) calculatesizepx($padding);
			margin-bottom: calculatesizepx($margin-bottom);
			letter-spacing: calculatesizepx($letter-spacing);
			font-size: calculatesizepx($font-size);

			&::placeholder {
				font-size: calculatesizepx($font-size);
			}

			&>option {
				font-size: calculatesizepx($font-size);
			}
		}

		& textarea {
			border-radius: calculatesizepx($border-radio);
			border: calculateSizePX($border) solid variables.$black-color;
			padding: calculatesizepx($padding);
			margin-bottom: calculatesizepx($margin-bottom);
			letter-spacing: calculatesizepx($letter-spacing);
			font-size: calculatesizepx($font-size);

			&::placeholder {
				font-size: calculatesizepx($font-size);
			}
		}

		& .required {
			& select,
			& input {
				border: calculateSizePX($border) solid variables.$red-color;
			}

			& textarea {
				border: calculateSizePX($border) solid variables.$red-color;
			}
		}
	}
}

@media (hover: none),
(pointer: coarse) {
	// * functions.$size-mobile
	// calculateSizeVW
	.control-container {
		span {
			min-height: calculateSizeVW($min-height-span * functions.$size-mobile);
			font-size: calculateSizeVW(variables.$font-size-control * functions.$size-mobile);
		}

		& select,
		& input {
			border-radius: calculateSizeVW($border-radio * functions.$size-mobile);
			border: calculateSizeVW($border * functions.$size-mobile) solid variables.$black-color;
			height: calculateSizeVW($height-control * functions.$size-mobile);
			padding: 0 calculateSizeVW($padding * functions.$size-mobile) calculateSizeVW($padding * functions.$size-mobile) calculateSizeVW($padding * functions.$size-mobile);
			margin-bottom: calculateSizeVW($margin-bottom * functions.$size-mobile);
			letter-spacing: calculateSizeVW($letter-spacing * functions.$size-mobile);
			font-size: calculateSizeVW($font-size * functions.$size-mobile);

			&::placeholder {
				font-size: calculateSizeVW($font-size * functions.$size-mobile);
			}

			&>option {
				font-size: calculateSizeVW($font-size * functions.$size-mobile);
			}
		}

		& textarea {
			border-radius: calculateSizeVW($border-radio * functions.$size-mobile);
			border: calculateSizeVW($border * functions.$size-mobile) solid variables.$black-color;
			padding: calculateSizeVW($padding * functions.$size-mobile);
			margin-bottom: calculateSizeVW($margin-bottom * functions.$size-mobile);
			letter-spacing: calculateSizeVW($letter-spacing * functions.$size-mobile);
			font-size: calculateSizeVW($font-size * functions.$size-mobile);

			&::placeholder {
				font-size: calculateSizeVW($font-size * functions.$size-mobile);
			}
		}

		& .required {
			& select,
			& input {
				border: calculateSizeVW($border * functions.$size-mobile) solid variables.$red-color;
			}

			& textarea {
				border: calculateSizeVW($border * functions.$size-mobile) solid variables.$red-color;
			}
		}
	}
}


@media (hover: none),
(pointer: coarse) {
	.control-container {
		span {
			min-height: calculateSizeVW($min-height-span * functions.$size-mobile-h);
			font-size: calculateSizeVW(variables.$font-size-control * functions.$size-mobile-h);
		}

		& select,
		& input {
			border-radius: calculateSizeVW($border-radio * functions.$size-mobile-h);
			border: calculateSizeVW($border * functions.$size-mobile-h) solid variables.$black-color;
			height: calculateSizeVW($height-control * functions.$size-mobile-h);
			padding: 0 calculateSizeVW($padding * functions.$size-mobile-h) calculateSizeVW($padding * functions.$size-mobile-h) calculateSizeVW($padding * functions.$size-mobile-h);
			margin-bottom: calculateSizeVW($margin-bottom * functions.$size-mobile-h);
			letter-spacing: calculateSizeVW($letter-spacing * functions.$size-mobile-h);
			font-size: calculateSizeVW($font-size * functions.$size-mobile-h);

			&::placeholder {
				font-size: calculateSizeVW($font-size * functions.$size-mobile-h);
			}

			&>option {
				font-size: calculateSizeVW($font-size * functions.$size-mobile-h);
			}
		}

		& textarea {
			border-radius: calculateSizeVW($border-radio * functions.$size-mobile-h);
			border: calculateSizeVW($border * functions.$size-mobile-h) solid variables.$black-color;
			padding: calculateSizeVW($padding * functions.$size-mobile-h);
			margin-bottom: calculateSizeVW($margin-bottom * functions.$size-mobile-h);
			letter-spacing: calculateSizeVW($letter-spacing * functions.$size-mobile-h);
			font-size: calculateSizeVW($font-size * functions.$size-mobile-h);

			&::placeholder {
				font-size: calculateSizeVW($font-size * functions.$size-mobile-h);
			}
		}

		& .required {
			& select,
			& input {
				border: calculateSizeVW($border * functions.$size-mobile-h) solid variables.$red-color;
			}

			& textarea {
				border: calculateSizeVW($border * functions.$size-mobile-h) solid variables.$red-color;
			}
		}
	}
}