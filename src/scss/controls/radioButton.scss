@import "../variables.scss";
@import "../functions.scss";

$border: 1;
$size-md: 18;
$span-height: 18;
$span-padding-top: 1;
$span-padding-left: 28;
$span-line-height: 18;

.radiobutton {
  input[type="radio"]:checked,
  input[type="radio"]:not(:checked) {
    display: none;

    &:disabled + label {
      opacity: $disabled-opacity;
    }

    &:required + label {
      color: $red-color;
      &:before {
        border: calculateSizeVW(1) solid $red-color;
      }
    }

    + label {
      font-size: calculateSizeVW($font-size-control);
      position: relative;
      height: calculateSizeVW(18);
      padding-top: calculateSizeVW(1);
      padding-left: calculateSizeVW(28);
      cursor: pointer;
      line-height: calculateSizeVW(18);
      display: inline-block;

      &:before {
        content: "";
        position: absolute;
        left: 0;
        top: 0;
        width: calculateSizeVW(18);
        height: calculateSizeVW(18);
        border: calculateSizeVW(1) solid $black-color;
        border-radius: 100%;
        background-color: $white-color;
      }

      &:after {
        content: "";
        width: calculateSizeVW(14);
        height: calculateSizeVW(14);
        background-color: $blue-color;
        position: absolute;
        top: calculateSizeVW(2);
        left: calculateSizeVW(2);
        border-radius: 100%;
      }
    }
  }

  input[type="radio"]:not(:checked) + label:after {
    display: none;
  }

  input[type="radio"]:checked + label:after {
    display: block;
  }
}

@media screen and (min-width: calculateSizePX($min-height-screen)) and (hover: hover) and (pointer: fine) {
  .radiobutton {
    input[type="radio"]:checked,
    input[type="radio"]:not(:checked) {
      &:required + label {
        &:before {
          border: calculateSizePX(1) solid $red-color;
        }
      }

      + label {
        font-size: calculateSizePX($font-size-control);
        height: calculateSizePX(18);
        padding-top: calculateSizePX(1);
        padding-left: calculateSizePX(28);
        line-height: calculateSizePX(18);

        &:before {
          width: calculateSizePX(18);
          height: calculateSizePX(18);
          border: calculateSizePX(1) solid $black-color;
        }

        &:after {
          width: calculateSizePX(14);
          height: calculateSizePX(14);
          top: calculateSizePX(2);
          left: calculateSizePX(2);
        }
      }
    }
  }
}
