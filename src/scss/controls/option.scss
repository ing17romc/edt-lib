@import '../variables.scss';
@import '../functions.scss';

$size-container: 160;
$border-container: 1;
$size-img: 70;
$border-hr: 1;

.container-option {
	background-color: $white-color;
	cursor: pointer;
	margin: auto auto;
	display: block;
	padding: 3%;
	border-radius: 10%;
	height: calculateSizeVW($size-container);
	width: calculateSizeVW($size-container);
	text-decoration: none;
	color: $primary-color-1;
	border: calculateSizeVW($border-container) solid $primary-color-1;
	text-align: center;

	& .material-icons {
		margin: auto auto;
		font-size: calculateSizeVW($size-img);
	}

	& hr {
		margin: auto auto;
		border: calculateSizeVW($border-hr) $gray-color solid;
		margin: 4%;
	}

	& p {
		padding: 3%;
	}

	&:hover {
		box-shadow: $shadow-elevated;
	}

	box-shadow: $shadow-flat;
}

@media only screen and (min-width: calculateSizePX($min-with-screen)) {
	.container-option {
		border: calculateSizePX($border-container) solid $primary-color-1;
		height: calculateSizePX($size-container);
		width: calculateSizePX($size-container);

		& .material-icons {
			font-size: calculateSizePX($size-img);
		}

		& hr {
			border: calculateSizePX($border-hr) $gray-color solid;
		}
	}
}

@media screen and (max-width: calculateSizePX($max-with-screen)) and (hover: hover) and (pointer: fine) {
	// * $size-mobile
	// calculateSizeVW
	.container-option {
		border: calculateSizeVW($border-container * $size-mobile) solid $primary-color-1;
		height: calculateSizeVW($size-container * $size-mobile);
		width: calculateSizeVW($size-container * $size-mobile);

		& .material-icons {
			font-size: calculateSizeVW($size-img * $size-mobile);
		}

		& hr {
			border: calculateSizeVW($border-hr * $size-mobile) $gray-color solid;
		}
	}
}