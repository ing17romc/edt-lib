@import '../variables.scss';
@import '../functions.scss';

$padding-h: 8;
$padding-v: 5;
$line-height: 18;

.textButton {
	display: block;
	text-decoration: none;
	padding: calculateSizeVW($padding-v) calculateSizeVW($padding-h);
	text-align: left;
	letter-spacing: 0px;
	line-height: calculateSizeVW($line-height);
	opacity: 1;
	cursor: pointer;

	&.disabled {
		opacity: $disabled-opacity;
	}

	&.primary {
		background-color: $primary-color-1;
		color: $white-color;
		border: calculateSizeVW($border-size) solid $primary-color-1;
	}

	&.secundary {
		background-color: $white-color;
		color: $primary-color-1;
		border: calculateSizeVW($border-size) solid $primary-color-1;
	}
}

@media screen and (min-width: calculateSizePX($min-with-screen)) {
	.textButton {
		padding: calculateSizePX($padding-v) calculateSizePX($padding-h);
		line-height: calculateSizePX($line-height);

		&.primary {
			border: calculateSizePX($border-size) solid $primary-color-1;
		}

		&.secundary {
			border: calculateSizePX($border-size) solid $primary-color-1;
		}
	}
}

@media (hover: none),
(pointer: coarse) {
	.textButton {
		padding: calculateSizeVW($padding-v * $size-mobile) calculateSizeVW($padding-h * $size-mobile);
		line-height: calculateSizeVW($line-height * $size-mobile);

		&.primary {
			border: calculateSizeVW($border-size * $size-mobile) solid $primary-color-1;
		}

		&.secundary {
			border: calculateSizeVW($border-size * $size-mobile) solid $primary-color-1;
		}
	}
}

@media (orientation: landscape) {
	.textButton {
		padding: calculateSizeVW($padding-v * $size-mobile-h) calculateSizeVW($padding-h * $size-mobile-h);
		line-height: calculateSizeVW($line-height * $size-mobile-h);

		&.primary {
			border: calculateSizeVW($border-size * $size-mobile-h) solid $primary-color-1;
		}

		&.secundary {
			border: calculateSizeVW($border-size * $size-mobile-h) solid $primary-color-1;
		}
	}
}