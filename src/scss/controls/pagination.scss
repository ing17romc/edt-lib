@import '../variables.scss';
@import '../functions.scss';

$padding: 12;
$height: 32;
$margin: 4;
$border-radius: 16;
$font-size: 13;
$min-width: 32;


.pagination-container {
  display: flex;
  list-style-type: none;

  .pagination-item {
    padding: 0 calculateSizeVW($padding);
    height: calculateSizeVW($height);
    text-align: center;
    margin: auto calculateSizeVW($margin);
    color: rgba(0, 0, 0, 0.87);
    display: flex;
    box-sizing: border-box;
    align-items: center;
    letter-spacing: 0.01071em;
    border-radius: calculateSizeVW($border-radius);
    line-height: 1.43;
    font-size: calculateSizeVW($font-size);
    min-width: calculateSizeVW($min-width);

    &:hover {
      background-color: rgba(0, 0, 0, 0.04);
      cursor: pointer;
    }

    &.selected {
      background-color: rgba(0, 0, 0, 0.08);
    }

    .arrow {
      &::before {
        position: relative;
        /* top: 3pt; Uncomment this to lower the icons as requested in comments*/
        content: '';
        /* By using an em scale, the arrows will size with the font */
        display: inline-block;
        width: 0.4em;
        height: 0.4em;
        border-right: 0.12em solid rgba(0, 0, 0, 0.87);
        border-top: 0.12em solid rgba(0, 0, 0, 0.87);
      }

      &.left {
        transform: rotate(-135deg) translate(-50%);
      }

      &.right {
        transform: rotate(45deg);
      }
    }

    &.disabled {
      pointer-events: none;

      .arrow::before {
        border-right: 0.12em solid rgba(0, 0, 0, 0.43);
        border-top: 0.12em solid rgba(0, 0, 0, 0.43);
      }

      &:hover {
        background-color: transparent;
        cursor: default;
      }
    }
  }
}

@media only screen and (min-width: calculateSizePX($min-height-screen)) {
  .pagination-container {
    .pagination-item {
      padding: 0 calculateSizeVW($padding);
      height: calculateSizeVW($height);
      margin: auto calculateSizeVW($margin);
      border-radius: calculateSizeVW($border-radius);
      font-size: calculateSizeVW($font-size);
      min-width: calculateSizeVW($min-width);
    }
  }
}