@import '../variables.scss';
@import '../functions.scss';

$padding: 12;

table {
	width: 100%;
	display: block;
	background-color: $white-color;
	overflow-x: auto;
	padding: calculateSizeVW($padding);

	& tbody {
		padding: calculateSizeVW($padding);
		& tr {
			text-align: justify;
			padding: calculateSizeVW($padding);

			& th {
				border-bottom: 2px solid $primary-color-1;
				padding: calculateSizeVW($padding);
			}

			& td {
				border-top: 1px solid $primary-color-1;
				padding: calculateSizeVW($padding);
				vertical-align: top;
			}

			&.active {
				&:hover {
					background-color: $light-gray-color;
					cursor: pointer;
				}
			}
		}
	}
}

@media screen and (min-width: calculateSizePX($min-with-screen)) and (hover: hover) and (pointer: fine) {
	table {
		padding: calculateSizePX($padding);
		& tbody {
			padding: calculateSizePX($padding);

			& tr {
				padding: calculateSizePX($padding);

				& th {
					border-bottom: 2px solid $primary-color-1;
					padding: calculateSizePX($padding);
				}

				& td {
					border-top: 1px solid $primary-color-1;
					padding: calculateSizePX($padding);
				}
			}
		}
	}
}

@media screen and (max-width: calculateSizePX($max-with-screen)) and (hover: hover) and (pointer: fine) {
	// * $size-mobile
	// calculateSizeVW
	table {
		padding: calculateSizeVW($padding * $size-mobile);
		& tbody {
			padding: calculateSizeVW($padding * $size-mobile);
			& tr {
				padding: calculateSizeVW($padding * $size-mobile);

				& th {
					border-bottom: 2px solid $primary-color-1;
					padding: calculateSizeVW($padding * $size-mobile);
				}

				& td {
					border-top: 1px solid $primary-color-1;
					padding: calculateSizeVW($padding * $size-mobile);
				}
			}
		}
	}
}