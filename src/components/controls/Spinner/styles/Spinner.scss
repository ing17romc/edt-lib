
@use 'sass:color';
@use '../../../../scss/variables';
@use '../../../../scss/functions';

$color-one: variables.$light-blue-color;
$color-two: variables.$primary-color-1;
$color-three: variables.$dark-blue-color;
$bg-spinner: variables.$black-color;
$size-loading: 150;
$border-loading: 2.5;
$position-sm: 5;
$position-md: 15;

div.container-load {
  overflow: hidden;
  z-index: 1000;
  position: fixed;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  background: color.adjust($color: $color-one, $alpha: 0.8);
  display: flex;
  justify-content: center;
  align-items: center;
  text-align: center;

  .loading {
    justify-content: center;
    align-items: center;
    text-align: center;
    overflow: hidden;
    display: block;
    position: relative;
    width: calculatesizevw($size-loading);
    height: calculatesizevw($size-loading);
    top: 0;
    left: 0;
    border-radius: 50%;
    border-width: calculatesizevw($border-loading);
    border-style: solid;
    border-color: transparent;
    border-top-color: $color-three;
    animation: spin 2s linear infinite;
    
    &::before, &::after {
      content: '';
      position: absolute;
      border-radius: 50%;
      border-width: calculatesizevw($border-loading);
      border-style: solid;
      border-color: transparent;
    }
    
    &::before {
      inset: calculatesizevw($position-sm);
      border-top-color: $color-two;
      animation: spin 3s linear infinite;
    }
    
    &::after {
      inset: calculatesizevw($position-md);
      border-top-color: $color-one;
      animation: spin 1.5s linear infinite;
    }
  }
  
  .text {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    color: $color-three;
    font-weight: bold;
    font-size: 1.2em;
  }
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

/* Media queries para diferentes tamaños de pantalla */
@media screen and (min-width: calculateSizePX(functions.$min-with-screen)) {
  div.container-load {
    .loading {
      width: calculatesizepx($size-loading);
      height: calculatesizepx($size-loading);
      border-width: calculatesizepx($border-loading);
      
      &::before, &::after {
        border-width: calculatesizepx($border-loading);
      }
      
      &::before {
        inset: calculatesizepx($position-sm);
      }
      
      &::after {
        inset: calculatesizepx($position-md);
      }
    }
  }
}

/* Estilos para dispositivos móviles */
@media (hover: none), (pointer: coarse) {
  div.container-load {
    .loading {
      width: calculatesizevw($size-loading * 0.7);
      height: calculatesizevw($size-loading * 0.7);
      border-width: calculatesizevw($border-loading * 0.7);
      
      &::before, &::after {
        border-width: calculatesizevw($border-loading * 0.7);
      }
      
      &::before {
        inset: calculatesizevw($position-sm * 0.7);
      }
      
      &::after {
        inset: calculatesizevw($position-md * 0.7);
      }
    }
  }
}
