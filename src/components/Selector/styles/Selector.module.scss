@use '../../../styles/palette' as *;
@use '../../../styles/spacing' as *;
@use '../../../styles/typography' as *;

// Local Variables
$selector-transition: all 0.2s ease-in-out;

// Mixins
@mixin selector-size($padding-y, $padding-x, $font-size, $line-height, $icon-size) {
  padding: $padding-y $padding-x;
  font-size: $font-size;
  line-height: $line-height;

  & + .selectorIcon {
    right: $padding-x;
    width: $icon-size;
    height: $icon-size;
  }
}

.selectorWrapper {
  display: inline-flex;
  flex-direction: column;
  gap: $selector-wrapper-gap;
  width: 100%;

  &--fullWidth {
    width: 100%;
  }
}

.selectorLabel {
  display: inline-block;
  margin-bottom: $selector-label-margin-bottom;
  font-weight: $selector-label-font-weight;
  color: $selector-label-text;
  font-size: $selector-label-font-size;
  line-height: $selector-label-line-height;
}

.selectorContainer {
  position: relative;
  display: inline-flex;
  align-items: center;
  width: 100%;
}

.selector {
  appearance: none;
  width: 100%;
  background-color: $selector-bg;
  border: $selector-border-width solid $selector-border;
  border-radius: $selector-border-radius;
  color: $selector-text;
  cursor: pointer;
  transition: $selector-transition;
  outline: none;

  // Tama√±os
  &--small {
    @include selector-size(
      $selector-padding-y-sm,
      $selector-padding-x-sm,
      $selector-font-size-sm,
      $selector-line-height-sm,
      $selector-icon-size-sm
    );
  }

  &--medium {
    @include selector-size(
      $selector-padding-y-md,
      $selector-padding-x-md,
      $selector-font-size-md,
      $selector-line-height-md,
      $selector-icon-size-md
    );
  }

  &--large {
    @include selector-size(
      $selector-padding-y-lg,
      $selector-padding-x-lg,
      $selector-font-size-lg,
      $selector-line-height-lg,
      $selector-icon-size-lg
    );
  }

  // Variantes
  &--primary {
    &:focus {
      border-color: $selector-focus-border-primary;
      box-shadow: 0 0 0 2px $selector-focus-shadow-primary;
    }

    &:hover:not(:disabled) {
      border-color: $selector-hover-border;
    }
  }

  &--secondary {
    border-color: $selector-focus-border-secondary;

    &:focus {
      border-color: $selector-focus-border-secondary;
      box-shadow: 0 0 0 2px $selector-focus-shadow-secondary;
    }

    &:hover:not(:disabled) {
      border-color: $selector-hover-border;
    }
  }

  &--error {
    border-color: $selector-error-border;

    &:focus {
      border-color: $selector-error-border;
      box-shadow: 0 0 0 2px $selector-error-focus-shadow;
    }
  }

  // Estados
  &:disabled {
    background-color: $selector-disabled-bg;
    color: $selector-disabled-text;
    cursor: not-allowed;
    opacity: $selector-disabled-opacity;
  }

  &--fullWidth {
    width: 100%;
  }
}

.selectorIcon {
  position: absolute;
  pointer-events: none;
  color: $selector-icon-color;
  transition: $selector-transition;
  display: flex;
  align-items: center;
  justify-content: center;

  svg {
    width: 100%;
    height: 100%;
  }
}

.helperText {
  margin-top: 0.25rem;
  font-size: 0.75rem;
  line-height: 1.25;
  color: $text-secondary;
  
  &--error {
    color: $danger-color;
  }
}

.requiredIndicator {
  color: $danger-color;
  margin-left: 0.25rem;
}

.selectorLoading {
  position: absolute;
  right: 0.75rem;
  display: flex;
  align-items: center;
  justify-content: center;
  pointer-events: none;
  
  &Spinner {
    width: 1rem;
    height: 1rem;
    border: 2px solid rgba($primary-color, 0.2);
    border-radius: 50%;
    border-top-color: $primary-color;
    animation: spin 1s ease-in-out infinite;
  }
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}
