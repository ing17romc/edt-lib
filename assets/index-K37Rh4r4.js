import{j as e}from"./jsx-runtime-D_zvdyIk.js";import{M as m}from"./index-BbRGezRq.js";import{T as u}from"./index-BNkp-o0C.js";import{B as p}from"./index-D9cxNMPW.js";const v=({title:i,message:s,details:a,type:n="INFO",eventContinue:r,show:o,eventModal:c})=>{const l=t=>{r(t)},d=()=>{switch(n){case"ERROR":return"❌";case"WARNING":return"⚠️";case"INFO":return"ℹ️";case"SUCCESSFULL":return"✅";default:return""}};return e.jsx(m,{show:o,eventModal:t=>{c(t)},children:e.jsxs("div",{className:"body-generic-notifications",children:[e.jsxs("div",{className:"grid-primary",children:[e.jsx("div",{className:"start-1 size-12",children:e.jsx(u,{children:i})}),e.jsx("div",{className:"center start-1 size-12 padding-v-40",children:e.jsx("div",{className:`circle ${n.toLowerCase()} center`,children:e.jsx("h1",{"aria-label":`Icono de ${n.toLowerCase()}`,children:d()})})})]}),e.jsx("div",{className:"center start-1 size-12 padding-v-30",children:e.jsx("p",{className:"font-16",children:s})}),a&&e.jsx("div",{className:"center start-1 size-12 padding-v-30",children:e.jsx("p",{className:"font-14",children:a})}),e.jsx("div",{className:"padding-v-20 start-9 size-4",children:e.jsx(p,{title:"Continuar",buttonType:"PRIMARY",onClick:l})})]})})};v.__docgenInfo={description:`Componente ModalNotifications que muestra notificaciones modales.
Permite mostrar diferentes tipos de notificaciones (error, warning, info, success) con un icono visual.

@param {ModalNotificationsProps} props - Propiedades del componente
@param {string} props.title - Título de la notificación
@param {string} props.message - Mensaje principal de la notificación
@param {string} [props.details] - Detalles adicionales de la notificación (opcional)
@param {NotificationType} [props.type='INFO'] - Tipo de notificación (ERROR, WARNING, INFO, SUCCESSFULL)
@param {(e: React.MouseEvent) => void} props.eventContinue - Función que se ejecuta al continuar
@param {boolean} props.show - Estado de visibilidad del modal
@param {(e: React.MouseEvent) => void} props.eventModal - Función que se ejecuta al cerrar el modal
@returns {JSX.Element} Elemento modal con notificación`,methods:[],displayName:"ModalNotifications",props:{title:{required:!0,tsType:{name:"string"},description:""},message:{required:!0,tsType:{name:"string"},description:""},details:{required:!1,tsType:{name:"string"},description:""},type:{required:!1,tsType:{name:"union",raw:"'ERROR' | 'WARNING' | 'INFO' | 'SUCCESSFULL'",elements:[{name:"literal",value:"'ERROR'"},{name:"literal",value:"'WARNING'"},{name:"literal",value:"'INFO'"},{name:"literal",value:"'SUCCESSFULL'"}]},description:"",defaultValue:{value:"'INFO'",computed:!1}},eventContinue:{required:!0,tsType:{name:"signature",type:"function",raw:"(e: React.MouseEvent<HTMLButtonElement>) => void",signature:{arguments:[{type:{name:"ReactMouseEvent",raw:"React.MouseEvent<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},name:"e"}],return:{name:"void"}}},description:""},show:{required:!0,tsType:{name:"boolean"},description:""},eventModal:{required:!0,tsType:{name:"signature",type:"function",raw:"(e: React.MouseEvent<HTMLButtonElement>) => void",signature:{arguments:[{type:{name:"ReactMouseEvent",raw:"React.MouseEvent<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},name:"e"}],return:{name:"void"}}},description:""}}};export{v as M};
