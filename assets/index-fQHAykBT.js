import{j as e}from"./jsx-runtime-D_zvdyIk.js";import{M as o}from"./index-J4r_aoTu.js";import{T as m}from"./index-BNkp-o0C.js";import{T as c}from"./index-BeE6wSqK.js";const p=({show:n,eventModal:t,code:s,title:i,message:d,details:l})=>{const r=a=>{switch(!0){case a<200:return"code-one-hundred";case a<300:return"code-two-hundred";case a<400:return"code-three-hundred";case a<500:return"code-four-hundred";case a<600:return"code-five-hundred";default:return""}};return e.jsx(o,{show:n,eventModal:t,children:e.jsx("div",{className:"body-generic-http-message",children:e.jsxs("div",{className:"grid-primary",children:[e.jsx("div",{className:"start-1 size-12",children:e.jsx(m,{level:4,children:"Mensaje HTTP"})}),e.jsxs("div",{className:"grid-secondary padding-v-50",children:[e.jsx("div",{className:"center start-1 size-24",children:e.jsx("h1",{className:r(s),children:s})}),e.jsx("div",{className:"center start-1 size-24  padding-v-10  ",children:e.jsx("h4",{className:r(s),children:i})})]}),e.jsx("div",{className:" start-1 size-12 ",children:e.jsx("p",{className:"font-18",children:" Mensaje "})}),e.jsx("div",{className:" start-1 size-12 padding-v-10  ",children:e.jsxs("p",{className:"font-16",children:[" ",d," "]})}),e.jsx("div",{className:"start-1 size-12 padding-v-50  ",children:e.jsx(c,{rows:6,id:"Detalles",value:l||"",readOnly:!0})})]})})})};p.__docgenInfo={description:`Componente ModalHttpMessage que muestra un modal con mensajes HTTP.
Proporciona una interfaz consistente para mostrar mensajes HTTP con código, título y detalles.

@param {ModalHttpMessageProps} props - Propiedades del componente
@param {boolean} props.show - Estado de visibilidad del modal
@param {(e: React.MouseEvent) => void} props.eventModal - Función que se ejecuta al cerrar el modal
@param {HttpStatusCode} props.code - Código HTTP a mostrar (100, 200, 300, 400, 500)
@param {string} props.title - Título del mensaje HTTP
@param {string} props.message - Mensaje principal del HTTP
@param {string} [props.details] - Detalles adicionales del mensaje (opcional)
@returns {JSX.Element} Elemento modal con mensaje HTTP`,methods:[],displayName:"ModalHttpMessage",props:{show:{required:!0,tsType:{name:"boolean"},description:""},eventModal:{required:!0,tsType:{name:"signature",type:"function",raw:"(e: React.MouseEvent) => void",signature:{arguments:[{type:{name:"ReactMouseEvent",raw:"React.MouseEvent"},name:"e"}],return:{name:"void"}}},description:""},code:{required:!0,tsType:{name:"union",raw:"100 | 200 | 300 | 400 | 500 | number",elements:[{name:"literal",value:"100"},{name:"literal",value:"200"},{name:"literal",value:"300"},{name:"literal",value:"400"},{name:"literal",value:"500"},{name:"number"}]},description:""},title:{required:!0,tsType:{name:"string"},description:""},message:{required:!0,tsType:{name:"string"},description:""},details:{required:!1,tsType:{name:"string"},description:""}}};export{p as M};
