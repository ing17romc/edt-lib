import{j as a}from"./jsx-runtime-D_zvdyIk.js";import{r as d}from"./index-D4lIrffr.js";import{b as g}from"./enums-Ca2RdD1G.js";const T=t=>{if(t&&t.target){if(t.target.tagName.toLowerCase()==="input")return t.target.type.toLowerCase()==="checkbox"?{key:t.target.name,value:t.target.checked}:t.target.type.toLowerCase()==="radio"?{key:t.target.name,value:t.target.id}:{key:t.target.name,value:t.target.value};if(t.target.tagName.toLowerCase()==="button")return{key:t.target.id,value:""};if(t.target.tagName.toLowerCase()==="textarea"||t.target.tagName.toLowerCase()==="select")return{key:t.target.id,value:t.target.value}}else return t?{key:t.id,value:t.value}:null},I=(t,p,s)=>t?p:s,$={getValueInput:T},R=({id:t,title:p,value:s,eventChange:w,disabled:o=!1,readOnly:m=!1,required:f=!1,ref:N})=>{const[i,D]=d.useState(""),[l,x]=d.useState(""),[c,j]=d.useState(""),[C,q]=d.useState([]),S=new Date().getFullYear();let b=S;if(s&&/^\d{1,2}\/\d{1,2}\/\d{4}$/.test(s)){const e=s.split("/");b=Math.max(S,parseInt(e[2],10))}const Y=Array.from({length:100},(e,r)=>b-99+r);d.useEffect(()=>{if(s&&Date.parse(s)){const e=new Date(s);D(e.getDate().toString()),x((e.getMonth()+1).toString()),j(e.getFullYear().toString())}},[s]),d.useEffect(()=>{q(Array.from({length:31},(e,r)=>r+1))},[]);const h=(e,r,n)=>`${e}/${r}/${n}`,M=e=>{const r=e.target.value;D(()=>{const n=r;if(l&&n&&c){const u=h(l,n,c);v(u)}return n})},E=e=>{const r=e.target.value;x(()=>{const n=r;if(n&&i&&c){const u=h(n,i,c);v(u)}return n})},L=e=>{const r=e.target.value;j(()=>{const n=r;if(l&&i&&n){const u=h(l,i,n);v(u)}return n})},v=e=>{e!==s&&w(e)},k=I(o,g.DISABLED,""),y=e=>o?g.DISABLED:m?g.READ_ONLY:f&&!e?g.REQUIRED:"";return a.jsx("div",{className:"control-container  ",children:a.jsxs("div",{className:`container-date ${k}`,role:"group","aria-label":p,children:[a.jsx("div",{className:`title ${k}`,children:a.jsx("label",{htmlFor:t,children:p})}),a.jsxs("div",{className:"date-picker-container",children:[a.jsx("div",{className:"month",children:a.jsx("div",{className:y(l),children:a.jsxs("select",{id:t,name:t,value:l,onChange:E,disabled:o,required:!o&&f,"aria-label":"Mes",ref:N,"aria-disabled":o,"aria-readonly":m,children:[a.jsx("option",{value:"",children:"Mes"}),["Enero","Febrero","Marzo","Abril","Mayo","Junio","Julio","Agosto","Septiembre","Octubre","Noviembre","Diciembre"].map((e,r)=>a.jsx("option",{value:r.toString(),children:e},r))]})})}),a.jsx("div",{className:"day",children:a.jsx("div",{className:y(i),children:a.jsxs("select",{value:i,onChange:M,disabled:o,required:!o&&f,"aria-label":"Día","aria-disabled":o,"aria-readonly":m,children:[a.jsx("option",{value:"",children:"Día"}),C.map(e=>a.jsx("option",{value:e.toString(),children:e},e))]})})}),a.jsx("div",{className:"year",children:a.jsx("div",{className:y(c),children:a.jsxs("select",{value:c,onChange:L,disabled:o,required:!o&&f,"aria-label":"Año","aria-disabled":o,"aria-readonly":m,children:[a.jsx("option",{value:"",children:"Año"}),Y.map(e=>a.jsx("option",{value:e.toString(),children:e},e))]})})})]})]})})};R.__docgenInfo={description:`Componente DatePicker que proporciona un selector de fecha personalizado.
Permite seleccionar día, mes y año de manera independiente.

@param {DatePickerProps} props - Propiedades del componente
@param {string} props.id - ID único para el componente
@param {string} props.title - Texto que se mostrará como etiqueta
@param {string} props.value - Valor inicial de la fecha (formato MM/DD/YYYY)
@param {(value: string) => void} props.eventChange - Función que se ejecuta al cambiar la fecha
@param {boolean} [props.disabled=false] - Si el componente está deshabilitado
@param {boolean} [props.readOnly=false] - Si el componente está en modo solo lectura
@param {boolean} [props.required=false] - Si el campo es requerido
@param {React.ForwardedRef} [props.ref] - Referencia al elemento select
@returns {JSX.Element} Elemento div con selectores para día, mes y año`,methods:[],displayName:"DatePicker",props:{id:{required:!0,tsType:{name:"string"},description:"Unique identifier for the date picker"},title:{required:!0,tsType:{name:"string"},description:"Label text displayed above the date picker"},value:{required:!0,tsType:{name:"string"},description:"Current date value in MM/DD/YYYY format"},eventChange:{required:!0,tsType:{name:"signature",type:"function",raw:"(value: string) => void",signature:{arguments:[{type:{name:"string"},name:"value"}],return:{name:"void"}}},description:"Callback function called when the date changes"},disabled:{required:!1,tsType:{name:"boolean"},description:"If true, the date picker is disabled",defaultValue:{value:"false",computed:!1}},readOnly:{required:!1,tsType:{name:"boolean"},description:"If true, the date picker is read-only",defaultValue:{value:"false",computed:!1}},required:{required:!1,tsType:{name:"boolean"},description:"If true, the date picker is required",defaultValue:{value:"false",computed:!1}},ref:{required:!1,tsType:{name:"ForwardedRef",elements:[{name:"HTMLSelectElement"}],raw:"ForwardedRef<HTMLSelectElement>"},description:"Ref to the month select element"}}};export{R as D,$ as f};
