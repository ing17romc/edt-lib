import{j as a}from"./jsx-runtime-D_zvdyIk.js";import{R as O}from"./index-D4lIrffr.js";const H="_radioButton_1kwsp_1",J="_radioButton__input_1kwsp_10",K="_radioButton__checkmark_1kwsp_17",L="_radioButton__label_1kwsp_41",d={radioButton:H,radioButton__input:J,radioButton__checkmark:K,radioButton__label:L},t=({value:e,label:o,checked:s=!1,disabled:n=!1,onChange:b,className:E="",name:F="radio-group",...W})=>{const $=()=>{!n&&b&&b(e)};return a.jsxs("label",{className:`${d.radioButton} ${E}`,...W,children:[a.jsx("input",{type:"radio",className:d.radioButton__input,checked:s,disabled:n,onChange:$,name:F,value:e}),a.jsx("span",{className:d.radioButton__checkmark}),o&&a.jsx("span",{className:d.radioButton__label,children:o})]})};t.__docgenInfo={description:"Componente RadioButton que permite seleccionar una opción de un conjunto de opciones mutuamente excluyentes.",methods:[],displayName:"RadioButton",props:{value:{required:!0,tsType:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}]},description:"Valor único que identifica este botón de radio"},label:{required:!0,tsType:{name:"string"},description:"Texto que se muestra junto al botón de radio"},checked:{required:!1,tsType:{name:"boolean"},description:"Indica si el botón de radio está seleccionado",defaultValue:{value:"false",computed:!1}},disabled:{required:!1,tsType:{name:"boolean"},description:"Indica si el botón de radio está deshabilitado",defaultValue:{value:"false",computed:!1}},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(value: string | number) => void",signature:{arguments:[{type:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}]},name:"value"}],return:{name:"void"}}},description:"Función que se ejecuta cuando cambia el estado del botón de radio"},className:{required:!1,tsType:{name:"string"},description:"Clase CSS opcional para personalizar el estilo",defaultValue:{value:"''",computed:!1}},name:{required:!1,tsType:{name:"string"},description:"Nombre del grupo al que pertenece el botón de radio",defaultValue:{value:"'radio-group'",computed:!1}}}};const r={value:"option1",label:"Opción 1",checked:!1,disabled:!1,name:"radio-group"},M={...r,checked:!0},P={...r,disabled:!0},Q={...r,checked:!0,disabled:!0},U={...r,className:"custom-radio-class"},z=()=>{const[e,o]=O.useState("option1"),s=n=>{o(String(n))};return a.jsxs("div",{style:{display:"flex",flexDirection:"column",gap:"12px"},children:[a.jsx(t,{value:"option1",label:"Opción 1",checked:e==="option1",onChange:s,name:"example-group"}),a.jsx(t,{value:"option2",label:"Opción 2",checked:e==="option2",onChange:s,name:"example-group"}),a.jsx(t,{value:"option3",label:"Opción 3 (deshabilitada)",checked:e==="option3",onChange:s,name:"example-group",disabled:!0})]})};z.__docgenInfo={description:"",methods:[],displayName:"RadioGroupComponent"};const ee={title:"Components/RadioButton",component:t,tags:["autodocs"],argTypes:{value:{control:"text",description:"Valor único que identifica este botón de radio"},label:{control:"text",description:"Texto que se muestra junto al botón de radio"},checked:{control:"boolean",description:"Indica si el botón de radio está seleccionado"},disabled:{control:"boolean",description:"Indica si el botón de radio está deshabilitado"},name:{control:"text",description:"Nombre del grupo al que pertenece el botón de radio"},className:{control:"text",description:"Clase CSS opcional para personalizar el estilo"},onChange:{action:"changed",description:"Función que se ejecuta cuando cambia el estado del botón de radio"}}},i={args:r},c={args:M},l={args:P},u={args:Q},p={args:U},m={render:()=>a.jsx(z,{})},X=e=>{const[o,s]=O.useState(e.checked||!1);return a.jsx(t,{...e,checked:o,onChange:()=>s(!o)})},g={render:e=>a.jsx(X,{...e}),args:r};var h,_,C;i.parameters={...i.parameters,docs:{...(h=i.parameters)==null?void 0:h.docs,source:{originalSource:`{
  args: defaultArgs
}`,...(C=(_=i.parameters)==null?void 0:_.docs)==null?void 0:C.source}}};var f,k,x;c.parameters={...c.parameters,docs:{...(f=c.parameters)==null?void 0:f.docs,source:{originalSource:`{
  args: checkedArgs
}`,...(x=(k=c.parameters)==null?void 0:k.docs)==null?void 0:x.source}}};var B,j,y;l.parameters={...l.parameters,docs:{...(B=l.parameters)==null?void 0:B.docs,source:{originalSource:`{
  args: disabledArgs
}`,...(y=(j=l.parameters)==null?void 0:j.docs)==null?void 0:y.source}}};var q,S,v;u.parameters={...u.parameters,docs:{...(q=u.parameters)==null?void 0:q.docs,source:{originalSource:`{
  args: disabledCheckedArgs
}`,...(v=(S=u.parameters)==null?void 0:S.docs)==null?void 0:v.source}}};var N,R,T;p.parameters={...p.parameters,docs:{...(N=p.parameters)==null?void 0:N.docs,source:{originalSource:`{
  args: withCustomClass
}`,...(T=(R=p.parameters)==null?void 0:R.docs)==null?void 0:T.source}}};var w,A,V;m.parameters={...m.parameters,docs:{...(w=m.parameters)==null?void 0:w.docs,source:{originalSource:`{
  render: () => <RadioGroupComponent />
}`,...(V=(A=m.parameters)==null?void 0:A.docs)==null?void 0:V.source}}};var D,I,G;g.parameters={...g.parameters,docs:{...(D=g.parameters)==null?void 0:D.docs,source:{originalSource:`{
  render: args => <ControlledComponent {...args} />,
  args: defaultArgs
}`,...(G=(I=g.parameters)==null?void 0:I.docs)==null?void 0:G.source}}};const ae=["Default","Checked","Disabled","DisabledChecked","WithCustomClass","Group","Controlled"];export{c as Checked,g as Controlled,i as Default,l as Disabled,u as DisabledChecked,m as Group,p as WithCustomClass,ae as __namedExportsOrder,ee as default};
