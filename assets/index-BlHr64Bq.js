import{j as y}from"./jsx-runtime-D_zvdyIk.js";import{r as v}from"./index-D4lIrffr.js";import{c as g}from"./index-_oZgBBUR.js";const R="_button_1t265_1",T="_spin_1t265_1",e={button:R,"button--small":"_button--small_1t265_27","button--medium":"_button--medium_1t265_33","button--large":"_button--large_1t265_39","button--primary":"_button--primary_1t265_45","button--secondary":"_button--secondary_1t265_55","button--tertiary":"_button--tertiary_1t265_66","button--danger":"_button--danger_1t265_76","button--success":"_button--success_1t265_86","button--warning":"_button--warning_1t265_96","button--fullWidth":"_button--fullWidth_1t265_106","button--loading":"_button--loading_1t265_110",spin:T};var u=(t=>(t.PRIMARY="primary",t.SECONDARY="secondary",t.TERTIARY="tertiary",t.DANGER="danger",t.SUCCESS="success",t.WARNING="warning",t))(u||{}),s=(t=>(t.SMALL="small",t.MEDIUM="medium",t.LARGE="large",t))(s||{});const r=v.forwardRef(({children:t,variant:l=u.PRIMARY,size:i=s.MEDIUM,type:d="button",disabled:a=!1,fullWidth:m=!1,className:c,onClick:n,...b},p)=>{const _=g(e.button,e[`button--${l}`],e[`button--${i}`],{[e["button--fullWidth"]]:m},c),f=o=>{if(a){o.preventDefault();return}n==null||n(o)};return y.jsx("button",{ref:p,type:d,className:_,disabled:a,onClick:f,...b,children:t})});r.displayName="Button";r.__docgenInfo={description:`Componente Button que representa un botón interactivo con múltiples variantes y tamaños.

@component
@example
// Uso básico
<Button variant="primary" size="medium" onClick={() => console.log('Clicked!')}>
  Hacer clic
</Button>`,methods:[],displayName:"Button",props:{children:{required:!0,tsType:{name:"ReactNode"},description:"Contenido del botón (texto o elementos React)"},variant:{required:!1,tsType:{name:"ButtonVariant"},description:`Variante visual del botón
@default 'primary'`,defaultValue:{value:"ButtonVariant.PRIMARY",computed:!0}},size:{required:!1,tsType:{name:"ButtonSize"},description:`Tamaño del botón
@default 'medium'`,defaultValue:{value:"ButtonSize.MEDIUM",computed:!0}},fullWidth:{required:!1,tsType:{name:"boolean"},description:`Si es true, el botón ocupa todo el ancho disponible
@default false`,defaultValue:{value:"false",computed:!1}},type:{required:!1,tsType:{name:"union",raw:"'button' | 'submit' | 'reset'",elements:[{name:"literal",value:"'button'"},{name:"literal",value:"'submit'"},{name:"literal",value:"'reset'"}]},description:`Tipo de botón HTML
@default 'button'`,defaultValue:{value:"'button'",computed:!1}},disabled:{required:!1,tsType:{name:"boolean"},description:`Si es true, el botón está deshabilitado
@default false`,defaultValue:{value:"false",computed:!1}},className:{required:!1,tsType:{name:"string"},description:"Clase CSS adicional para el botón"},onClick:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"Función que se ejecuta al hacer clic en el botón"}},composes:["Omit"]};export{r as B,s as a,u as b};
