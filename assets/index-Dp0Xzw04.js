import{j as a}from"./jsx-runtime-D_zvdyIk.js";import{r as R}from"./index-D4lIrffr.js";const m=R.forwardRef(({id:u,titleTop:o,placeholder:s,titleBottom:r,value:f,required:i=!1,isPassword:v=!1,disabled:n=!1,readOnly:t=!1,noPaste:T=!1,noCopy:E=!1,size:y=200,eventChange:p,eventFocus:l,eventBlur:d,eventKeyDown:c,...x},g)=>{const b=e=>{T&&e.preventDefault()},h=e=>{E&&e.preventDefault()},I=e=>{e.key==="Enter"&&e.preventDefault(),c&&!n&&!t&&c(e)};return a.jsx("div",{className:"body-textbox",children:a.jsxs("div",{className:"grid-primary",children:[a.jsx("div",{className:"start-1 size-12",children:o&&a.jsx("h3",{className:"title-textbox",children:o})}),a.jsx("div",{className:"start-1 size-12 padding-v-10",children:a.jsx("input",{id:u,type:v?"password":"text",placeholder:s,value:f,required:i,className:n?"DISABLED":t?"READ_ONLY":"",disabled:n,readOnly:t,onChange:e=>{p&&!n&&p(e)},onFocus:e=>{l&&!n&&!t&&l(e)},onBlur:e=>{d&&!n&&!t&&d(e)},onKeyDown:I,ref:g,onPaste:b,onCopy:h,style:{width:`${y}px`},"aria-label":o||s,"aria-required":i,"aria-disabled":n,"aria-readonly":t,...x})}),r&&a.jsx("div",{className:"start-1 size-12 padding-v-10",children:a.jsx("h3",{className:"title-textbox",children:r})})]})})});m.displayName="TextBox";m.__docgenInfo={description:`Componente TextBox que proporciona un campo de entrada de texto con múltiples opciones de configuración.
Permite crear campos de texto personalizados con títulos, placeholders y diferentes estados.

@param {TextBoxProps} props - Propiedades del componente
@param {string} props.id - ID único para el input (requerido)
@param {string} [props.titleTop] - Título superior del campo
@param {string} [props.placeholder] - Texto de placeholder
@param {string} [props.titleBottom] - Título inferior del campo
@param {string} props.value - Valor actual del input
@param {boolean} [props.required=false] - Si el campo es requerido
@param {boolean} [props.isPassword=false] - Si el campo es de tipo contraseña
@param {boolean} [props.disabled=false] - Si el campo está deshabilitado
@param {boolean} [props.readOnly=false] - Si el campo es de solo lectura
@param {boolean} [props.noPaste=false] - Si se permite pegar
@param {boolean} [props.noCopy=false] - Si se permite copiar
@param {number} [props.size=200] - Ancho del input en píxeles
@param {(e: React.ChangeEvent<HTMLInputElement>) => void} [props.eventChange] - Evento de cambio
@param {(e: React.FocusEvent<HTMLInputElement>) => void} [props.eventFocus] - Evento de enfoque
@param {(e: React.FocusEvent<HTMLInputElement>) => void} [props.eventBlur] - Evento de pérdida de enfoque
@param {(e: React.KeyboardEvent<HTMLInputElement>) => void} [props.eventKeyDown] - Evento de tecla presionada
@param {Ref<HTMLInputElement>} [props.ref] - Referencia al elemento input
@returns {JSX.Element} Elemento input con configuración personalizada`,methods:[],displayName:"TextBox",props:{id:{required:!0,tsType:{name:"string"},description:"ID único del campo de entrada"},titleTop:{required:!1,tsType:{name:"string"},description:"Título que aparece encima del campo"},placeholder:{required:!1,tsType:{name:"string"},description:"Texto de marcador de posición"},titleBottom:{required:!1,tsType:{name:"string"},description:"Texto descriptivo debajo del campo"},value:{required:!0,tsType:{name:"string"},description:"Valor actual del campo"},required:{required:!1,tsType:{name:"boolean"},description:"Indica si el campo es obligatorio",defaultValue:{value:"false",computed:!1}},isPassword:{required:!1,tsType:{name:"boolean"},description:"Indica si el campo es de tipo contraseña",defaultValue:{value:"false",computed:!1}},disabled:{required:!1,tsType:{name:"boolean"},description:"Indica si el campo está deshabilitado",defaultValue:{value:"false",computed:!1}},readOnly:{required:!1,tsType:{name:"boolean"},description:"Indica si el campo es de solo lectura",defaultValue:{value:"false",computed:!1}},noPaste:{required:!1,tsType:{name:"boolean"},description:"Indica si está deshabilitado el pegado de texto",defaultValue:{value:"false",computed:!1}},noCopy:{required:!1,tsType:{name:"boolean"},description:"Indica si está deshabilitada la copia de texto",defaultValue:{value:"false",computed:!1}},size:{required:!1,tsType:{name:"number"},description:"Ancho del campo en píxeles",defaultValue:{value:"200",computed:!1}},eventChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: React.ChangeEvent<HTMLInputElement>) => void",signature:{arguments:[{type:{name:"ReactChangeEvent",raw:"React.ChangeEvent<HTMLInputElement>",elements:[{name:"HTMLInputElement"}]},name:"e"}],return:{name:"void"}}},description:"Manejador del evento de cambio"},eventFocus:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: React.FocusEvent<HTMLInputElement>) => void",signature:{arguments:[{type:{name:"ReactFocusEvent",raw:"React.FocusEvent<HTMLInputElement>",elements:[{name:"HTMLInputElement"}]},name:"e"}],return:{name:"void"}}},description:"Manejador del evento de foco"},eventBlur:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: React.FocusEvent<HTMLInputElement>) => void",signature:{arguments:[{type:{name:"ReactFocusEvent",raw:"React.FocusEvent<HTMLInputElement>",elements:[{name:"HTMLInputElement"}]},name:"e"}],return:{name:"void"}}},description:"Manejador del evento de pérdida de foco"},eventKeyDown:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: React.KeyboardEvent<HTMLInputElement>) => void",signature:{arguments:[{type:{name:"ReactKeyboardEvent",raw:"React.KeyboardEvent<HTMLInputElement>",elements:[{name:"HTMLInputElement"}]},name:"e"}],return:{name:"void"}}},description:"Manejador del evento de tecla presionada"},ref:{required:!1,tsType:{name:"ReactRefObject",raw:"React.RefObject<HTMLInputElement>",elements:[{name:"HTMLInputElement"}]},description:"Referencia al elemento input"}}};export{m as T};
