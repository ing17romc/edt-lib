import{j as a}from"./jsx-runtime-D_zvdyIk.js";import{r as R}from"./index-D4lIrffr.js";import{S as c}from"./constant-znG4q3vV.js";const f=R.forwardRef(({id:s,titleTop:n,placeholder:o,titleBottom:i,value:x,required:l=!1,disabled:t=!1,readOnly:r=!1,noPaste:T=!1,noCopy:v=!1,size:h=200,rows:y=4,eventChange:p,eventFocus:d,eventBlur:m,eventKeyDown:u,...E},g)=>{const b=e=>{T&&e.preventDefault()},q=e=>{v&&e.preventDefault()},A=e=>{e.key==="Enter"?e.preventDefault():u&&!t&&!r&&u(e)};return a.jsx("div",{className:"body-textarea",children:a.jsxs("div",{className:"grid-primary",children:[a.jsx("div",{className:"start-1 size-12",children:n&&a.jsx("h3",{className:"title-textarea",children:n})}),a.jsx("div",{className:"start-1 size-12 padding-v-10",children:a.jsx("textarea",{id:s,name:s,value:x,placeholder:o,className:t?c.DISABLED:r?c.READ_ONLY:"",disabled:t,readOnly:r,onChange:e=>{p&&!t&&p(e)},onFocus:e=>{d&&!t&&!r&&d(e)},onBlur:e=>{m&&!t&&!r&&m(e)},onKeyDown:A,ref:g,onPaste:b,onCopy:q,rows:y,maxLength:h,autoComplete:"off",required:l,"aria-label":n||o,"aria-required":l,"aria-disabled":t,"aria-readonly":r,...E})}),i&&a.jsx("div",{className:"start-1 size-12 padding-v-10",children:a.jsx("h3",{className:"title-textarea",children:i})})]})})});f.displayName="TextArea";f.__docgenInfo={description:`Componente TextArea que proporciona un área de texto con múltiples opciones de configuración.
Permite crear áreas de texto personalizadas con títulos, placeholders y diferentes estados.

@param {TextAreaProps} props - Propiedades del componente
@param {string} props.id - ID único para el textarea (requerido)
@param {string} [props.titleTop] - Título superior del área de texto
@param {string} [props.placeholder] - Texto de placeholder
@param {string} [props.titleBottom] - Título inferior del área de texto
@param {string} props.value - Valor actual del textarea
@param {boolean} [props.required=false] - Si el área de texto es requerida
@param {boolean} [props.disabled=false] - Si el área de texto está deshabilitada
@param {boolean} [props.readOnly=false] - Si el área de texto es de solo lectura
@param {boolean} [props.noPaste=false] - Si se permite pegar
@param {boolean} [props.noCopy=false] - Si se permite copiar
@param {number} [props.size=200] - Número máximo de caracteres
@param {number} [props.rows=4] - Número de filas del textarea
@param {(e: React.ChangeEvent<HTMLTextAreaElement>) => void} [props.eventChange] - Evento de cambio
@param {(e: React.FocusEvent<HTMLTextAreaElement>) => void} [props.eventFocus] - Evento de enfoque
@param {(e: React.FocusEvent<HTMLTextAreaElement>) => void} [props.eventBlur] - Evento de pérdida de enfoque
@param {(e: React.KeyboardEvent<HTMLTextAreaElement>) => void} [props.eventKeyDown] - Evento de tecla presionada
@param {Ref<HTMLTextAreaElement>} [props.ref] - Referencia al elemento textarea
@returns {JSX.Element} Elemento textarea con configuración personalizada`,methods:[],displayName:"TextArea",props:{id:{required:!0,tsType:{name:"string"},description:"Unique identifier for the textarea (required)"},titleTop:{required:!1,tsType:{name:"string"},description:"Text to display above the textarea"},placeholder:{required:!1,tsType:{name:"string"},description:"Placeholder text to display when the textarea is empty"},titleBottom:{required:!1,tsType:{name:"string"},description:"Text to display below the textarea"},value:{required:!0,tsType:{name:"string"},description:"Current value of the textarea (controlled component)"},required:{required:!1,tsType:{name:"boolean"},description:"Whether the textarea is required",defaultValue:{value:"false",computed:!1}},disabled:{required:!1,tsType:{name:"boolean"},description:"Whether the textarea is disabled",defaultValue:{value:"false",computed:!1}},readOnly:{required:!1,tsType:{name:"boolean"},description:"Whether the textarea is read-only",defaultValue:{value:"false",computed:!1}},noPaste:{required:!1,tsType:{name:"boolean"},description:"Whether to prevent paste operations",defaultValue:{value:"false",computed:!1}},noCopy:{required:!1,tsType:{name:"boolean"},description:"Whether to prevent copy operations",defaultValue:{value:"false",computed:!1}},size:{required:!1,tsType:{name:"number"},description:"Maximum number of characters allowed",defaultValue:{value:"200",computed:!1}},rows:{required:!1,tsType:{name:"number"},description:"Number of visible text lines",defaultValue:{value:"4",computed:!1}},eventChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: React.ChangeEvent<HTMLTextAreaElement>) => void",signature:{arguments:[{type:{name:"ReactChangeEvent",raw:"React.ChangeEvent<HTMLTextAreaElement>",elements:[{name:"HTMLTextAreaElement"}]},name:"e"}],return:{name:"void"}}},description:"Callback when the value changes"},eventFocus:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: React.FocusEvent<HTMLTextAreaElement>) => void",signature:{arguments:[{type:{name:"ReactFocusEvent",raw:"React.FocusEvent<HTMLTextAreaElement>",elements:[{name:"HTMLTextAreaElement"}]},name:"e"}],return:{name:"void"}}},description:"Callback when the textarea receives focus"},eventBlur:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: React.FocusEvent<HTMLTextAreaElement>) => void",signature:{arguments:[{type:{name:"ReactFocusEvent",raw:"React.FocusEvent<HTMLTextAreaElement>",elements:[{name:"HTMLTextAreaElement"}]},name:"e"}],return:{name:"void"}}},description:"Callback when the textarea loses focus"},eventKeyDown:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: React.KeyboardEvent<HTMLTextAreaElement>) => void",signature:{arguments:[{type:{name:"ReactKeyboardEvent",raw:"React.KeyboardEvent<HTMLTextAreaElement>",elements:[{name:"HTMLTextAreaElement"}]},name:"e"}],return:{name:"void"}}},description:"Callback when a key is pressed"},ref:{required:!1,tsType:{name:"Ref",elements:[{name:"HTMLTextAreaElement"}],raw:"Ref<HTMLTextAreaElement>"},description:"Ref to the underlying textarea element"}}};export{f as T};
